<!-- Client/Pages/CulturalHeritageList.razor -->
@page "/exhibits"
@using Newtonsoft.Json
@inject IHttpClientFactory ClientFactory

<h1>List of Cultural Heritage</h1>

@if (getCulturalHeritageError || Exhibits is null)
{
    <p>Unable to get cultural heritage data. Please try again later.</p>
}
else
{
    <div class="exhibit-container">
        @foreach (var exhibit in Exhibits)
        {
            <ExhibitCard Source="@exhibit" />
        }
    </div>
}

@code {
    private IEnumerable<Exhibit>? Exhibits = Array.Empty<Exhibit>();
    private bool getCulturalHeritageError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://localhost:7210/api/Exhibit");
        request.Headers.Add("Accept", "application/json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            var responseStream = await response.Content.ReadAsStringAsync();
            Exhibits = JsonConvert.DeserializeObject
                <IEnumerable<Exhibit>>(responseStream);
        }
        else
        {
            getCulturalHeritageError = true;
        }

        shouldRender = true;
    }
}
